{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      search: '',\n      showNameColumn: true,\n      showPhotoColumn: false,\n      data: [],\n      name: '',\n      image: null,\n      fruitlist: [],\n      fields: [{\n        key: \"name\",\n        label: \"ชื่อผลไม้\"\n      }, {\n        key: \"image\",\n        label: \"\"\n      }],\n      items: [{\n        name: \"John\",\n        age: 30,\n        image: \"../public/Red_Apple.jpg\"\n      }],\n      text: \"\"\n    };\n  },\n  mounted() {\n    this.getfruit();\n    this.save();\n    this.searchName();\n  },\n  computed: {\n    filteredData() {\n      return this.data.filter(item => item.name.toLowerCase().includes(this.search.toLowerCase()));\n    }\n  },\n  methods: {\n    searchName() {\n      console.log(\"aaaaaa\");\n      axios.get(`http://localhost:3000/searchdatafruit/?name=${this.search}`).then(response => {\n        console.log(\"fsdfsdfs\");\n        console.log(response.data.data);\n        this.fruitlist = response.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    onSubmit() {\n      const formData = new FormData();\n      formData.append('name', this.name);\n      formData.append('photo', this.photo);\n      axios.post(\"http://localhost:3000\" + \"/upload\", formData).then(response => {\n        // console.log(response.data);\n        // Close the modal\n        this.$bvModal.hide('bv-modal-example');\n        // Display a notification based on the response message\n        if (response.data.message === 'Please provide a value, and photo.') {\n          this.$bvToast.toast('Error: ' + response.data.message, {\n            title: 'Error',\n            variant: 'danger',\n            autoHideDelay: 0,\n            toaster: 'b-toaster-top-center'\n          });\n        } else if (response.data.message === 'Value and photo successfully added.') {\n          this.$bvToast.toast(response.data.message, {\n            title: 'Success',\n            variant: 'success',\n            autoHideDelay: 0,\n            toaster: 'b-toaster-top-center'\n          });\n          // Refresh the page\n          location.reload();\n        }\n      }).catch(error => {\n        // console.log(error);\n        // Check the status code\n        if (error.response.status === 400) {\n          // Display a notification that stays on the screen until the user closes it\n          this.$bvToast.toast('Error: ' + error.response.data.message, {\n            title: 'Error',\n            variant: 'danger',\n            autoHideDelay: 0,\n            toaster: 'b-toaster-top-center'\n          });\n        } else {\n          // Display a notification with a default duration\n          this.$bvToast.toast('Error: ' + error, {\n            title: 'Error',\n            variant: 'danger',\n            autoHideDelay: 3000,\n            toaster: 'b-toaster-top-center'\n          });\n        }\n      });\n    },\n    getfruit() {\n      // console.log(\"aaaaa\")\n      this.axios.get(\"http://localhost:3000\" + \"/getdatafruit\", {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(response => {\n        // console.log(\"fdsfsdf\")\n        console.log(response.data.data);\n        this.fruitlist = response.data.data;\n        // console.log(this.fruitlist)\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA2DA;AAEA;EAEAA;IACA;MACAC;MACAC;MACAC;MACAH;MACAI;MACAC;MACAC;MACAC,SACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;QAAAN;QAAAO;QAAAN;MAAA;MACAO;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACAC;MACAC,MACAC,kEACAC;QACAH;QACAA;QACA;MACA,GACAI;QACAJ;MACA;IACA;IACAK;MACA;MACAC;MACAA;MAEAL,MACAM,oDACAJ;QACA;QACA;QACA;QACA;QACA;UACA;YACAK;YACAC;YACAC;YACAC;UACA;QACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;UACA;UACAC;QACA;MACA,GACAR;QACA;QACA;QACA;UACA;UACA;YACAI;YACAC;YACAC;YACAC;UACA;QACA;UACA;UACA;YACAH;YACAC;YACAC;YACAC;UACA;QACA;MACA;IACA;IACAE;MACA;MACA;QACAC;UACA;QACA;MACA;QACA;QACAd;QACA;QACA;MACA;IACA;EACA;AAIA","names":["data","search","showNameColumn","showPhotoColumn","name","image","fruitlist","fields","key","label","items","age","text","mounted","computed","filteredData","methods","searchName","console","axios","get","then","catch","onSubmit","formData","post","title","variant","autoHideDelay","toaster","location","getfruit","headers"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <b-card style=\"width: 1400px; height: auto\" class=\"mx-auto\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-12 d-flex justify-content-end\">\r\n            <b-button id=\"show-btn\" @click=\"$bvModal.show('bv-modal-example')\" variant=\"success\"\r\n              class=\"mb-3 mr-3\">เพิ่มผลไม้</b-button>\r\n          </div>\r\n          <div>\r\n            <b-modal id=\"bv-modal-example\" hide-footer style=\"width: 500px; height: auto\">\r\n              <template #modal-title>\r\n                Create\r\n              </template>\r\n              <div class=\"d-block\">\r\n                <b-form @submit.stop.prevent=\"onSubmit\">\r\n                  <b-form-group label=\"Name : \" label-for=\"name\">\r\n                    <b-form-input v-model=\"name\"></b-form-input>\r\n                  </b-form-group>\r\n                  <b-form-group label=\"Photo\" label-for=\"photo\">\r\n                    <b-form-file v-model=\"photo\" accept=\"image/*\"></b-form-file>\r\n                  </b-form-group>\r\n                  <div class=\"d-flex justify-content-end\">\r\n                    <b-button class=\"mt-3 mx-2\" block type=\"submit\" variant=\"primary\">save</b-button>\r\n                    <b-button class=\"mt-3 mx-2\" block @click=\"$bvModal.hide('bv-modal-example')\"\r\n                      variant=\"danger\">cancel</b-button>\r\n                  </div>\r\n                </b-form>\r\n              </div>\r\n            </b-modal>\r\n          </div>\r\n\r\n          <div class=\"col-12 d-flex justify-content-end\">\r\n            <b-form-input v-model=\"search\" placeholder=\"Search for names\" @input.native=\"searchName\"\r\n              style=\"width: 200px; height: auto\"></b-form-input>\r\n          </div>\r\n        </div>\r\n      </b-card>\r\n    </div>\r\n\r\n    <b-card style=\"width: 1400px; height: auto\" class=\"mx-auto\">\r\n      <div v-if=\"fruitlist.length > 0\">\r\n        <div class=\"pt-3 mx-auto\">\r\n          <b-table striped hover :items=\"fruitlist\" :fields=\"['name', 'photo']\">\r\n            <template v-slot:cell(name)=\"data\"  v-if=\"showNameColumn\">\r\n              {{ data.item === 'name' ? 'aaa' : data.item.name }}\r\n            </template>\r\n            <template v-slot:cell(photo)=\"data\" >\r\n              <img :src=\"'data:image/jpeg;base64,' + data.item.photo\" alt=\"fruit photo\" width=\"200\" height=\"200\"/>\r\n            </template>\r\n          </b-table>\r\n        </div>\r\n      </div>\r\n    </b-card>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      search: '',\r\n      showNameColumn: true,\r\n    showPhotoColumn: false,\r\n      data: [],\r\n      name: '',\r\n      image: null,\r\n      fruitlist: [],\r\n      fields: [\r\n        { key: \"name\", label: \"ชื่อผลไม้\" },\r\n        { key: \"image\", label: \"\" },\r\n      ],\r\n      items: [{ name: \"John\", age: 30, image: \"../public/Red_Apple.jpg\" }],\r\n      text: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getfruit();\r\n    this.save();\r\n    this.searchName();\r\n  },\r\n  computed: {\r\n    filteredData() {\r\n      return this.data.filter((item) => item.name.toLowerCase().includes(this.search.toLowerCase()));\r\n    }\r\n  },\r\n  methods: {\r\n    searchName() {\r\n    console.log(\"aaaaaa\")\r\n    axios\r\n      .get(`http://localhost:3000/searchdatafruit/?name=${this.search}`)\r\n      .then((response) => {\r\n        console.log(\"fsdfsdfs\")\r\n        console.log(response.data.data)\r\n        this.fruitlist = response.data.data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  },\r\n    onSubmit() {\r\n      const formData = new FormData();\r\n      formData.append('name', this.name);\r\n      formData.append('photo', this.photo);\r\n\r\n      axios\r\n        .post(\"http://localhost:3000\" + \"/upload\", formData)\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          // Close the modal\r\n          this.$bvModal.hide('bv-modal-example');\r\n          // Display a notification based on the response message\r\n          if (response.data.message === 'Please provide a value, and photo.') {\r\n            this.$bvToast.toast('Error: ' + response.data.message, {\r\n              title: 'Error',\r\n              variant: 'danger',\r\n              autoHideDelay: 0,\r\n              toaster: 'b-toaster-top-center'\r\n            });\r\n          } else if (response.data.message === 'Value and photo successfully added.') {\r\n            this.$bvToast.toast(response.data.message, {\r\n              title: 'Success',\r\n              variant: 'success',\r\n              autoHideDelay: 0,\r\n              toaster: 'b-toaster-top-center'\r\n            });\r\n            // Refresh the page\r\n            location.reload();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n          // Check the status code\r\n          if (error.response.status === 400) {\r\n            // Display a notification that stays on the screen until the user closes it\r\n            this.$bvToast.toast('Error: ' + error.response.data.message, {\r\n              title: 'Error',\r\n              variant: 'danger',\r\n              autoHideDelay: 0,\r\n              toaster: 'b-toaster-top-center'\r\n            });\r\n          } else {\r\n            // Display a notification with a default duration\r\n            this.$bvToast.toast('Error: ' + error, {\r\n              title: 'Error',\r\n              variant: 'danger',\r\n              autoHideDelay: 3000,\r\n              toaster: 'b-toaster-top-center'\r\n            });\r\n          }\r\n        });\r\n    },\r\n    getfruit() {\r\n      // console.log(\"aaaaa\")\r\n      this.axios.get(\"http://localhost:3000\" + \"/getdatafruit\", {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        }\r\n      }).then((response) => {\r\n        // console.log(\"fdsfsdf\")\r\n        console.log(response.data.data)\r\n        this.fruitlist = response.data.data;\r\n        // console.log(this.fruitlist)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}